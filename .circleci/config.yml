version: 2.1
jobs:
  build:
    working_directory: ~/repo/client
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn install
    
  deploy-dev:
    working_directory: ~/repo/client
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn global add vercel
      - run: vercel pull --yes --environment=dev --token=$VERCEL_TOKEN_DEV
      - run: vercel build --token=$VERCEL_TOKEN_DEV
      - run: vercel deploy --prebuilt  --token=$VERCEL_TOKEN_DEV
  deploy-staging:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn global add vercel
      - run: vercel pull --yes --environment=stage --token=$VERCEL_TOKEN_DEV
      - run: vercel build --token=$VERCEL_TOKEN_DEV
      - run: vercel deploy --prebuilt  --token=$VERCEL_TOKEN_DEV
  deploy-production:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn global add vercel
      - run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN_DEV
      - run: vercel build --token=$VERCEL_TOKEN_DEV
      - run: vercel deploy --prebuilt  --token=$VERCEL_TOKEN_DEV

workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only:
                - staging
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only:
                - main
